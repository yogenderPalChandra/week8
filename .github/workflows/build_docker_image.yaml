name: Create Docker Container

on: [push]

jobs:
  mlops-container:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./serverless
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 1200
          aws-region: eu-central-1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mlops
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 636521895949.dkr.ecr.eu-central-1.amazonaws.com
          docker build --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -t 636521895949.dkr.ecr.eu-central-1.amazonaws.com/mlops:v5 .
          docker tag mlops:v5 636521895949.dkr.ecr.eu-central-1.amazonaws.com/mlops:v6
          docker push 636521895949.dkr.ecr.eu-central-1.amazonaws.com/mlops:v6

      - name: Update lambda with image
        run: aws lambda update-function-code --function-name  mlops --image-uri 636521895949.dkr.ecr.eu-central-1.amazonaws.com/mlops:v5
